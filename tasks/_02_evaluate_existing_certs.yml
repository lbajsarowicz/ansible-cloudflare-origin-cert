---
- name: Evaluate existing certificates for suitability and expiration
  ansible.builtin.set_fact:
    certificate_status: >-
      {%- set cert_info = namespace(found=false, needs_renewal=true, match_processed=false) -%}
      {%- for cert in existing_certs_response.json.result | default([]) -%}
        {%- if not cert_info.match_processed -%}
          {# Check if this certificate matches the hostnames and is active #}
          {%- if (cf_certificate_hostnames | map('lower') | sort) == (cert.hostnames | map('lower') | sort) and
                 (cert.state | default('') | lower == 'active' or cert.status | default('') | lower == 'active') -%}
            {%- set cert_info.found = true -%}
            {%- set cert_expires_epoch = (cert.expires_on | to_datetime('%Y-%m-%dT%H:%M:%SZ')).strftime('%s') | int -%}
            {%- if cert_expires_epoch >= renewal_threshold_epoch | int -%}
              {%- set cert_info.needs_renewal = false -%} {# Found a good cert, doesn't need renewal #}
            {%- else -%}
              {%- set cert_info.needs_renewal = true -%}  {# Found a cert, but it's expiring #}
            {%- endif -%}
            {%- set cert_info.match_processed = true -%} {# Mark that we've processed the first relevant cert #}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{ {'found': cert_info.found,
          'needs_renewal': cert_info.needs_renewal if cert_info.found else true} }}
  when:
    - not (api_call_failed | default(false))
    - existing_certs_response.json is defined
    - existing_certs_response.json.result is defined # Ensure result list exists
    - renewal_threshold_epoch is defined

- name: Determine if new certificate generation is actually required
  ansible.builtin.set_fact:
    generate_new_certificate: "{{ not certificate_status.found or certificate_status.needs_renewal }}"
  # This task uses certificate_status which is initialized in _00_initialize_and_validate.yml
  # and potentially updated by the task above.

- name: Inform about certificate status and decision
  ansible.builtin.debug:
    msg: >-
      Evaluation for hostnames {{ cf_certificate_hostnames }}:  # <--- CORRECTED VARIABLE NAME HERE
      Found on Cloudflare: {{ certificate_status.found }}.
      Needs Renewal (or creation if not found): {{ certificate_status.needs_renewal }}.
      Decision - Proceeding with new certificate generation: {{ generate_new_certificate }}.
