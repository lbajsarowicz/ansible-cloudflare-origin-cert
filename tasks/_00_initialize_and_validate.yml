---
- name: Assert that all required variables are defined
  ansible.builtin.assert:
    that:
      - cf_api_token is defined and cf_api_token | length > 0
      - cf_zone_id is defined and cf_zone_id | length > 0
      - cf_certificate_hostnames is defined and cf_certificate_hostnames | length > 0
      - cf_certificate_install_path is defined and cf_certificate_install_path | length > 0
      - cf_certificate_file is defined and cf_certificate_file | length > 0
      - cf_key_file is defined and cf_key_file | length > 0
      - cf_certificate_validity_days is defined
    quiet: true # Suppress "ok" output for assertions
    fail_msg: "A required variable is not defined or is empty. Please check role documentation."
    success_msg: "All required variables are defined."

- name: Gather current date and time facts (UTC)
  ansible.builtin.setup:
    filter: ansible_date_time # Gathers ansible_date_time.epoch among others

- name: Initialize certificate status facts
  ansible.builtin.set_fact:
    # Default to: certificate not found, therefore needs generating/renewing.
    # This will be updated in _02_evaluate_existing_certs.yml if a suitable, non-expiring cert is found.
    certificate_status:
      found: false
      needs_renewal: true
    generate_new_certificate: true # Initial assumption, will be refined
    # Ensure content variables are undefined initially
    origin_certificate_content: null
    origin_private_key_content: null

- name: Calculate renewal threshold (1 year from current UTC time)
  ansible.builtin.set_fact:
    renewal_threshold_epoch: "{{ ansible_date_time.epoch | int + (365 * 24 * 60 * 60) }}"
  when: ansible_date_time.epoch is defined and ansible_date_time.epoch is not none
