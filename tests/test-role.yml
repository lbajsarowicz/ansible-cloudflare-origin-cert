---
- hosts: localhost
  connection: local
  become: no

  vars:
    cf_api_token: "{{ lookup('env', 'CF_API_TOKEN_SECRET') }}"
    cf_zone_id: "{{ lookup('env', 'CF_ZONE_ID_SECRET') }}"

    # cf_certificate_hostnames_test_var is a JSON string from GitHub repo variables
    # e.g., '["ci-test1.yourdomain.com", "*.ci-test1.yourdomain.com"]'
    _cf_certificate_hostnames_test_str: "{{ lookup('env', 'CF_CERTIFICATE_HOSTNAMES_VAR') }}"
    cf_certificate_hostnames: "{{ _cf_certificate_hostnames_test_str | from_json if _cf_certificate_hostnames_test_str else ['default-ci-test.example.com'] }}"

    # Role variables configured for testing
    # Using a unique path in /tmp for each run to avoid conflicts
    cf_certificate_install_path: "/tmp/cf_certs_test_{{ lookup('env', 'GITHUB_RUN_ID') }}_{{ lookup('env', 'GITHUB_RUN_ATTEMPT') }}/"
    cf_certificate_file: "{{ cf_certificate_install_path }}origin.pem"
    cf_key_file: "{{ cf_certificate_install_path }}origin.key"
    cf_certificate_validity_days: 7 # Use shortest validity for testing purposes
    webserver_service_name: "dummy-ci-webserver" # Dummy service for handler

  pre_tasks:
    - name: Ensure certificate installation directory exists
      ansible.builtin.file:
        path: "{{ cf_certificate_install_path }}"
        state: directory
        mode: '0755'
      tags: always # Run this even in --check mode if applicable for other tests

  roles:
    - role: ../

  handlers:
    - name: Restart webserver (CI Test Handler)
      ansible.builtin.debug:
        msg: "HANDLER: 'Restart webserver' for service '{{ webserver_service_name }}' was triggered."
      listen: Restart webserver
